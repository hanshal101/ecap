name: Run ROC Sensor in GitHub Actions

on:
  workflow_dispatch:

jobs:
  run-roc:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare config file
        run: |
          mkdir -p ./roc-config ./roc-output
          cat <<'EOF' > ./roc-config/pattern.yaml
          patterns:
            - id: "api_key"
              regex: "(?i)api[_-]?key\\s*[:=]\\s*[A-Za-z0-9\\-_]{16,}"
            - id: "authorization_bearer"
              regex: "Bearer\\s+[A-Za-z0-9\\-._~+/]+=*"
            - id: "email"
              regex: "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}"
          EOF

      - name: Run ROC container
        run: |
          docker run -d --name roc-test \
            --privileged \
            --pid=host \
            --network=host \
            -v /proc:/proc \
            -v /sys:/sys \
            -v /lib/x86_64-linux-gnu/libssl.so.3:/usr/lib64/libssl.so.3 \
            -v /lib/x86_64-linux-gnu/libcrypto.so.3:/usr/lib64/libcrypto.so.3 \
            -v ${{ github.workspace }}/roc-output:/tmp/roc-output \
            -v ${{ github.workspace }}/roc-config:/tmp/roc-config:ro \
            hanshal785/roc:v3 \
            --server-url https://api.codexsecurity.io \
            --api-key dummyapikey1234567890 \
            --patterns /tmp/roc-config/pattern.yaml \
            --watch /tmp/roc-output

          sleep 20

      - name: Generate traffic # 1
        run: |
          echo "Sending secret-like HTTP requests..."
          curl -s -X POST "https://httpbin.org/post?api_key=APIKEY_TEST_ABCDEF123456" \
            -H "Authorization: Bearer TEST_BEARER_TOKEN_123456" \
            -H "Content-Type: application/json" \
            -d '{"email":"testuser@example.com","msg":"trigger"}' \
            > /dev/null || true

      - name: Print ROC logs (after traffic 1)
        run: |
          sleep 40
          docker logs roc-test || true
          docker exec roc-test sh -c 'cat /tmp/roc-output/secrets_*.json || true'

      - name: Generate traffic # 2 (inside container)
        run: |
          docker exec roc-test sh -c 'apt update && apt install -y curl'
          docker exec roc-test sh -c \
            "curl -s -X POST 'https://httpbin.org/post?api_key=ANOTHERAPIKEY1234567890' \
              -H 'Authorization: Bearer CONTAINER_BEARER_TOKEN_0123456789' \
              -H 'Content-Type: application/json' \
              -d '{\"email\":\"internal@test.com\",\"info\":\"second test\"}'" \
            > /dev/null || true
          sleep 20
          docker logs roc-test || true
          docker exec roc-test sh -c 'cat /tmp/roc-output/secrets_*.json || true'

      - name: Cleanup
        if: always()
        run: |
          docker rm -f roc-test || true
          rm -rf ./roc-output ./roc-config
