name: Run ROC Sensor in GitHub Actions

on:
  workflow_dispatch:

jobs:
  run-roc:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare config file
        run: |
          mkdir -p ./roc-config ./roc-output
          cat <<'EOF' > ./roc-config/pattern.yaml
          patterns:
            - id: "simple_number"
              regex: "1234"
          EOF
          ls -l ./roc-config/

      - name: Run ROC container (privileged)
        run: |
          docker run -d --name roc-test \
            --privileged \
            --pid=host \
            --network=host \
            -v /proc:/proc \
            -v /sys:/sys \
            -v /lib/x86_64-linux-gnu/libssl.so.3:/usr/lib64/libssl.so.3 \
            -v /lib/x86_64-linux-gnu/libcrypto.so.3:/usr/lib64/libcrypto.so.3 \
            -v ${{ github.workspace }}/roc-output:/tmp/roc-output \
            -v ${{ github.workspace }}/roc-config:/tmp/roc-config:ro \
            hanshal785/roc:v4 \
            --server-url https://api.codexsecurity.io \
            --api-key dummyapikey1234567890 \
            --patterns /tmp/roc-config/pattern.yaml \
            --watch /tmp/roc-output

          sleep 20

      - name: Simulate curl traffic (send 12345667788764)
        run: |
          echo "Generating curl traffic..."
          curl -s https://example.com > /dev/null || true
          
          curl -s -X POST "https://httpbin.org/post?test=12345667788764" \
            -H "Content-Type: application/json" \
            -d '{"data":"12345667788764"}' \
            > /dev/null || true

      - name: Print ROC logs
        run: |
          echo "Sleeping 70 to allow logs to generate..."
          sleep 70
          echo "Fetching ROC container logs..."
          docker logs roc-test || true
          sleep 5
          docker exec roc-test sh -c 'cat /tmp/roc-output/secrets_*.json || true'

      - name: More simulated curl traffic with 12345667788764
        run: |
          curl -X POST "https://example.com?more=12345667788764" \
            -H "Content-Type: application/json" \
            -d '{"info":"12345667788764"}' > /dev/null || true

          sleep 20
          docker logs roc-test || true

      - name: Inside the container - install curl + trigger 12345667788764
        run: |
          docker exec roc-test sh -c 'apt update && apt install -y curl'
          docker exec roc-test sh -c "curl -X POST https://example.com -H 'Content-Type: application/json' -d '{\"inside\":\"12345667788764\"}'"
          docker logs roc-test || true

      - name: Cleanup
        if: always()
        run: |
          docker rm -f roc-test || true
          rm -rf /tmp/roc-output /tmp/roc-config
